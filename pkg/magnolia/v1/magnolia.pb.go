// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: magnolia.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common Definition Area
type DomainResolutionRecordType int32

const (
	DomainResolutionRecordType_NONE  DomainResolutionRecordType = 0
	DomainResolutionRecordType_A     DomainResolutionRecordType = 1
	DomainResolutionRecordType_NS    DomainResolutionRecordType = 2
	DomainResolutionRecordType_CNAME DomainResolutionRecordType = 5
	DomainResolutionRecordType_SOA   DomainResolutionRecordType = 6
	DomainResolutionRecordType_PTR   DomainResolutionRecordType = 12
	DomainResolutionRecordType_MX    DomainResolutionRecordType = 15
	DomainResolutionRecordType_TXT   DomainResolutionRecordType = 16
	DomainResolutionRecordType_RP    DomainResolutionRecordType = 17
	DomainResolutionRecordType_AAAA  DomainResolutionRecordType = 28
	DomainResolutionRecordType_LOC   DomainResolutionRecordType = 29
	DomainResolutionRecordType_SRV   DomainResolutionRecordType = 33
	DomainResolutionRecordType_CERT  DomainResolutionRecordType = 37
	DomainResolutionRecordType_URI   DomainResolutionRecordType = 256
)

// Enum value maps for DomainResolutionRecordType.
var (
	DomainResolutionRecordType_name = map[int32]string{
		0:   "NONE",
		1:   "A",
		2:   "NS",
		5:   "CNAME",
		6:   "SOA",
		12:  "PTR",
		15:  "MX",
		16:  "TXT",
		17:  "RP",
		28:  "AAAA",
		29:  "LOC",
		33:  "SRV",
		37:  "CERT",
		256: "URI",
	}
	DomainResolutionRecordType_value = map[string]int32{
		"NONE":  0,
		"A":     1,
		"NS":    2,
		"CNAME": 5,
		"SOA":   6,
		"PTR":   12,
		"MX":    15,
		"TXT":   16,
		"RP":    17,
		"AAAA":  28,
		"LOC":   29,
		"SRV":   33,
		"CERT":  37,
		"URI":   256,
	}
)

func (x DomainResolutionRecordType) Enum() *DomainResolutionRecordType {
	p := new(DomainResolutionRecordType)
	*p = x
	return p
}

func (x DomainResolutionRecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainResolutionRecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_magnolia_proto_enumTypes[0].Descriptor()
}

func (DomainResolutionRecordType) Type() protoreflect.EnumType {
	return &file_magnolia_proto_enumTypes[0]
}

func (x DomainResolutionRecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainResolutionRecordType.Descriptor instead.
func (DomainResolutionRecordType) EnumDescriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{0}
}

type Operator int32

const (
	Operator_GT Operator = 0
	Operator_LT Operator = 1
	Operator_EQ Operator = 2
	Operator_LE Operator = 3
	Operator_GE Operator = 4
)

// Enum value maps for Operator.
var (
	Operator_name = map[int32]string{
		0: "GT",
		1: "LT",
		2: "EQ",
		3: "LE",
		4: "GE",
	}
	Operator_value = map[string]int32{
		"GT": 0,
		"LT": 1,
		"EQ": 2,
		"LE": 3,
		"GE": 4,
	}
)

func (x Operator) Enum() *Operator {
	p := new(Operator)
	*p = x
	return p
}

func (x Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_magnolia_proto_enumTypes[1].Descriptor()
}

func (Operator) Type() protoreflect.EnumType {
	return &file_magnolia_proto_enumTypes[1]
}

func (x Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operator.Descriptor instead.
func (Operator) EnumDescriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{1}
}

type LogicalOperator int32

const (
	LogicalOperator_AND LogicalOperator = 0
	LogicalOperator_OR  LogicalOperator = 1
)

// Enum value maps for LogicalOperator.
var (
	LogicalOperator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	LogicalOperator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x LogicalOperator) Enum() *LogicalOperator {
	p := new(LogicalOperator)
	*p = x
	return p
}

func (x LogicalOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_magnolia_proto_enumTypes[2].Descriptor()
}

func (LogicalOperator) Type() protoreflect.EnumType {
	return &file_magnolia_proto_enumTypes[2]
}

func (x LogicalOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalOperator.Descriptor instead.
func (LogicalOperator) EnumDescriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{2}
}

type CommunicationDestination_CommunicationType int32

const (
	CommunicationDestination_Default CommunicationDestination_CommunicationType = 0
	CommunicationDestination_Mobile  CommunicationDestination_CommunicationType = 1
	CommunicationDestination_Email   CommunicationDestination_CommunicationType = 2
)

// Enum value maps for CommunicationDestination_CommunicationType.
var (
	CommunicationDestination_CommunicationType_name = map[int32]string{
		0: "Default",
		1: "Mobile",
		2: "Email",
	}
	CommunicationDestination_CommunicationType_value = map[string]int32{
		"Default": 0,
		"Mobile":  1,
		"Email":   2,
	}
)

func (x CommunicationDestination_CommunicationType) Enum() *CommunicationDestination_CommunicationType {
	p := new(CommunicationDestination_CommunicationType)
	*p = x
	return p
}

func (x CommunicationDestination_CommunicationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommunicationDestination_CommunicationType) Descriptor() protoreflect.EnumDescriptor {
	return file_magnolia_proto_enumTypes[3].Descriptor()
}

func (CommunicationDestination_CommunicationType) Type() protoreflect.EnumType {
	return &file_magnolia_proto_enumTypes[3]
}

func (x CommunicationDestination_CommunicationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommunicationDestination_CommunicationType.Descriptor instead.
func (CommunicationDestination_CommunicationType) EnumDescriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{1, 0}
}

// Registration Code for registering user account
type ApplyRegistrationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Username                 string                    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Namespace                string                    `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CommunicationDestination *CommunicationDestination `protobuf:"bytes,4,opt,name=communicationDestination,proto3" json:"communicationDestination,omitempty"`
}

func (x *ApplyRegistrationCodeRequest) Reset() {
	*x = ApplyRegistrationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRegistrationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRegistrationCodeRequest) ProtoMessage() {}

func (x *ApplyRegistrationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRegistrationCodeRequest.ProtoReflect.Descriptor instead.
func (*ApplyRegistrationCodeRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{0}
}

func (x *ApplyRegistrationCodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyRegistrationCodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ApplyRegistrationCodeRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ApplyRegistrationCodeRequest) GetCommunicationDestination() *CommunicationDestination {
	if x != nil {
		return x.CommunicationDestination
	}
	return nil
}

type CommunicationDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string                                     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Type CommunicationDestination_CommunicationType `protobuf:"varint,2,opt,name=type,proto3,enum=v1.CommunicationDestination_CommunicationType" json:"type,omitempty"`
}

func (x *CommunicationDestination) Reset() {
	*x = CommunicationDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommunicationDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationDestination) ProtoMessage() {}

func (x *CommunicationDestination) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommunicationDestination.ProtoReflect.Descriptor instead.
func (*CommunicationDestination) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{1}
}

func (x *CommunicationDestination) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CommunicationDestination) GetType() CommunicationDestination_CommunicationType {
	if x != nil {
		return x.Type
	}
	return CommunicationDestination_Default
}

type ApplyRegistrationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result           *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ClientID         string  `protobuf:"bytes,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	RegistrationCode string  `protobuf:"bytes,3,opt,name=registrationCode,proto3" json:"registrationCode,omitempty"`
}

func (x *ApplyRegistrationCodeResponse) Reset() {
	*x = ApplyRegistrationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRegistrationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRegistrationCodeResponse) ProtoMessage() {}

func (x *ApplyRegistrationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRegistrationCodeResponse.ProtoReflect.Descriptor instead.
func (*ApplyRegistrationCodeResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{2}
}

func (x *ApplyRegistrationCodeResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ApplyRegistrationCodeResponse) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *ApplyRegistrationCodeResponse) GetRegistrationCode() string {
	if x != nil {
		return x.RegistrationCode
	}
	return ""
}

type UserRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationCode string `protobuf:"bytes,1,opt,name=registrationCode,proto3" json:"registrationCode,omitempty"`
	ClientID         string `protobuf:"bytes,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret     string `protobuf:"bytes,3,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	Email            string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Mobile           string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Namespace        string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UserRegistrationRequest) Reset() {
	*x = UserRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegistrationRequest) ProtoMessage() {}

func (x *UserRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegistrationRequest.ProtoReflect.Descriptor instead.
func (*UserRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{3}
}

func (x *UserRegistrationRequest) GetRegistrationCode() string {
	if x != nil {
		return x.RegistrationCode
	}
	return ""
}

func (x *UserRegistrationRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UserRegistrationRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *UserRegistrationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserRegistrationRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserRegistrationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type UserRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *User   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserRegistrationResponse) Reset() {
	*x = UserRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegistrationResponse) ProtoMessage() {}

func (x *UserRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegistrationResponse.ProtoReflect.Descriptor instead.
func (*UserRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{4}
}

func (x *UserRegistrationResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UserRegistrationResponse) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email            string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile           string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	PrivateKey       []byte `protobuf:"bytes,5,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	PublicKey        []byte `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Namespace        string `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ClientID         string `protobuf:"bytes,8,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret     string `protobuf:"bytes,9,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	CreationTime     int64  `protobuf:"varint,20,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	LastModifiedTime int64  `protobuf:"varint,21,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *User) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *User) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *User) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *User) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *User) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *User) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

type UserAuthenticationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID     string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
}

func (x *UserAuthenticationRequest) Reset() {
	*x = UserAuthenticationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationRequest) ProtoMessage() {}

func (x *UserAuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationRequest.ProtoReflect.Descriptor instead.
func (*UserAuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{6}
}

func (x *UserAuthenticationRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UserAuthenticationRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type UserAuthenticationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	AccessToken string  `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *UserAuthenticationResponse) Reset() {
	*x = UserAuthenticationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationResponse) ProtoMessage() {}

func (x *UserAuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationResponse.ProtoReflect.Descriptor instead.
func (*UserAuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{7}
}

func (x *UserAuthenticationResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UserAuthenticationResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type UserUnregisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID    string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *UserUnregisterRequest) Reset() {
	*x = UserUnregisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUnregisterRequest) ProtoMessage() {}

func (x *UserUnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUnregisterRequest.ProtoReflect.Descriptor instead.
func (*UserUnregisterRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{8}
}

func (x *UserUnregisterRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UserUnregisterRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type LicenseManagementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID    string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *LicenseManagementRequest) Reset() {
	*x = LicenseManagementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseManagementRequest) ProtoMessage() {}

func (x *LicenseManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseManagementRequest.ProtoReflect.Descriptor instead.
func (*LicenseManagementRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{9}
}

func (x *LicenseManagementRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *LicenseManagementRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type RevokeLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID    string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	LicenseID   string `protobuf:"bytes,3,opt,name=licenseID,proto3" json:"licenseID,omitempty"`
}

func (x *RevokeLicenseRequest) Reset() {
	*x = RevokeLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeLicenseRequest) ProtoMessage() {}

func (x *RevokeLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeLicenseRequest.ProtoReflect.Descriptor instead.
func (*RevokeLicenseRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{10}
}

func (x *RevokeLicenseRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *RevokeLicenseRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RevokeLicenseRequest) GetLicenseID() string {
	if x != nil {
		return x.LicenseID
	}
	return ""
}

type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiKey    string `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	ApiSecret string `protobuf:"bytes,3,opt,name=apiSecret,proto3" json:"apiSecret,omitempty"`
	ClientID  string `protobuf:"bytes,4,opt,name=clientID,proto3" json:"clientID,omitempty"`
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{11}
}

func (x *License) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *License) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *License) GetApiSecret() string {
	if x != nil {
		return x.ApiSecret
	}
	return ""
}

func (x *License) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type LicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *License `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LicenseResponse) Reset() {
	*x = LicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseResponse) ProtoMessage() {}

func (x *LicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseResponse.ProtoReflect.Descriptor instead.
func (*LicenseResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{12}
}

func (x *LicenseResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LicenseResponse) GetData() *License {
	if x != nil {
		return x.Data
	}
	return nil
}

type LicensesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*License `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LicensesResponse) Reset() {
	*x = LicensesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicensesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicensesResponse) ProtoMessage() {}

func (x *LicensesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicensesResponse.ProtoReflect.Descriptor instead.
func (*LicensesResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{13}
}

func (x *LicensesResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LicensesResponse) GetData() []*License {
	if x != nil {
		return x.Data
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner            string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	ContractName     string `protobuf:"bytes,4,opt,name=contractName,proto3" json:"contractName,omitempty"`
	Administrator    string `protobuf:"bytes,5,opt,name=administrator,proto3" json:"administrator,omitempty"`
	Preference       int32  `protobuf:"varint,6,opt,name=preference,proto3" json:"preference,omitempty"`
	CreationTime     int64  `protobuf:"varint,7,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	LastModifiedTime int64  `protobuf:"varint,8,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{14}
}

func (x *Namespace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Namespace) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *Namespace) GetAdministrator() string {
	if x != nil {
		return x.Administrator
	}
	return ""
}

func (x *Namespace) GetPreference() int32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *Namespace) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *Namespace) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

type NamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NamespaceRequest) Reset() {
	*x = NamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceRequest) ProtoMessage() {}

func (x *NamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceRequest.ProtoReflect.Descriptor instead.
func (*NamespaceRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{15}
}

func (x *NamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *Namespace `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NamespaceResponse) Reset() {
	*x = NamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceResponse) ProtoMessage() {}

func (x *NamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceResponse.ProtoReflect.Descriptor instead.
func (*NamespaceResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{16}
}

func (x *NamespaceResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *NamespaceResponse) GetData() *Namespace {
	if x != nil {
		return x.Data
	}
	return nil
}

type NamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*Namespace `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NamespacesResponse) Reset() {
	*x = NamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacesResponse) ProtoMessage() {}

func (x *NamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacesResponse.ProtoReflect.Descriptor instead.
func (*NamespacesResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{17}
}

func (x *NamespacesResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *NamespacesResponse) GetData() []*Namespace {
	if x != nil {
		return x.Data
	}
	return nil
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Registrant       string                             `protobuf:"bytes,2,opt,name=registrant,proto3" json:"registrant,omitempty"`
	Registrar        string                             `protobuf:"bytes,3,opt,name=registrar,proto3" json:"registrar,omitempty"`
	Namespace        string                             `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreationTime     int64                              `protobuf:"varint,5,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	LastModifiedTime int64                              `protobuf:"varint,6,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
	Rrs              map[string]*DomainResolutionRecord `protobuf:"bytes,7,rep,name=rrs,proto3" json:"rrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{18}
}

func (x *Domain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Domain) GetRegistrant() string {
	if x != nil {
		return x.Registrant
	}
	return ""
}

func (x *Domain) GetRegistrar() string {
	if x != nil {
		return x.Registrar
	}
	return ""
}

func (x *Domain) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Domain) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *Domain) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *Domain) GetRrs() map[string]*DomainResolutionRecord {
	if x != nil {
		return x.Rrs
	}
	return nil
}

type CreateDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Registrant string `protobuf:"bytes,2,opt,name=registrant,proto3" json:"registrant,omitempty"`
}

func (x *CreateDomainRequest) Reset() {
	*x = CreateDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainRequest) ProtoMessage() {}

func (x *CreateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{19}
}

func (x *CreateDomainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDomainRequest) GetRegistrant() string {
	if x != nil {
		return x.Registrant
	}
	return ""
}

type DomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DomainRequest) Reset() {
	*x = DomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRequest) ProtoMessage() {}

func (x *DomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRequest.ProtoReflect.Descriptor instead.
func (*DomainRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{20}
}

func (x *DomainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *Domain `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DomainResponse) Reset() {
	*x = DomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainResponse) ProtoMessage() {}

func (x *DomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainResponse.ProtoReflect.Descriptor instead.
func (*DomainResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{21}
}

func (x *DomainResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DomainResponse) GetData() *Domain {
	if x != nil {
		return x.Data
	}
	return nil
}

type DomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*Domain `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DomainsResponse) Reset() {
	*x = DomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainsResponse) ProtoMessage() {}

func (x *DomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainsResponse.ProtoReflect.Descriptor instead.
func (*DomainsResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{22}
}

func (x *DomainsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DomainsResponse) GetData() []*Domain {
	if x != nil {
		return x.Data
	}
	return nil
}

type DomainResolutionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Domain string                     `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Type   DomainResolutionRecordType `protobuf:"varint,4,opt,name=type,proto3,enum=v1.DomainResolutionRecordType" json:"type,omitempty"`
	Ttl    uint32                     `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Registrant       string                     `protobuf:"bytes,6,opt,name=registrant,proto3" json:"registrant,omitempty"`
	Registrar        string                     `protobuf:"bytes,7,opt,name=registrar,proto3" json:"registrar,omitempty"`
	CreationTime     int64                      `protobuf:"varint,8,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	LastModifiedTime int64                      `protobuf:"varint,9,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
	// Types that are assignable to Data:
	//	*DomainResolutionRecord_Rr
	//	*DomainResolutionRecord_Soa
	//	*DomainResolutionRecord_Cert
	//	*DomainResolutionRecord_Uri
	//	*DomainResolutionRecord_Rp
	//	*DomainResolutionRecord_Mx
	Data isDomainResolutionRecord_Data `protobuf_oneof:"data"`
}

func (x *DomainResolutionRecord) Reset() {
	*x = DomainResolutionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainResolutionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainResolutionRecord) ProtoMessage() {}

func (x *DomainResolutionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainResolutionRecord.ProtoReflect.Descriptor instead.
func (*DomainResolutionRecord) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{23}
}

func (x *DomainResolutionRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DomainResolutionRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainResolutionRecord) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainResolutionRecord) GetType() DomainResolutionRecordType {
	if x != nil {
		return x.Type
	}
	return DomainResolutionRecordType_NONE
}

func (x *DomainResolutionRecord) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *DomainResolutionRecord) GetRegistrant() string {
	if x != nil {
		return x.Registrant
	}
	return ""
}

func (x *DomainResolutionRecord) GetRegistrar() string {
	if x != nil {
		return x.Registrar
	}
	return ""
}

func (x *DomainResolutionRecord) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *DomainResolutionRecord) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (m *DomainResolutionRecord) GetData() isDomainResolutionRecord_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DomainResolutionRecord) GetRr() *RRData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Rr); ok {
		return x.Rr
	}
	return nil
}

func (x *DomainResolutionRecord) GetSoa() *SOAData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Soa); ok {
		return x.Soa
	}
	return nil
}

func (x *DomainResolutionRecord) GetCert() *CertData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Cert); ok {
		return x.Cert
	}
	return nil
}

func (x *DomainResolutionRecord) GetUri() *URIData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *DomainResolutionRecord) GetRp() *RPData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Rp); ok {
		return x.Rp
	}
	return nil
}

func (x *DomainResolutionRecord) GetMx() *MXData {
	if x, ok := x.GetData().(*DomainResolutionRecord_Mx); ok {
		return x.Mx
	}
	return nil
}

type isDomainResolutionRecord_Data interface {
	isDomainResolutionRecord_Data()
}

type DomainResolutionRecord_Rr struct {
	Rr *RRData `protobuf:"bytes,20,opt,name=rr,proto3,oneof"`
}

type DomainResolutionRecord_Soa struct {
	Soa *SOAData `protobuf:"bytes,21,opt,name=soa,proto3,oneof"`
}

type DomainResolutionRecord_Cert struct {
	Cert *CertData `protobuf:"bytes,22,opt,name=cert,proto3,oneof"`
}

type DomainResolutionRecord_Uri struct {
	Uri *URIData `protobuf:"bytes,23,opt,name=uri,proto3,oneof"`
}

type DomainResolutionRecord_Rp struct {
	Rp *RPData `protobuf:"bytes,24,opt,name=rp,proto3,oneof"`
}

type DomainResolutionRecord_Mx struct {
	Mx *MXData `protobuf:"bytes,25,opt,name=mx,proto3,oneof"`
}

func (*DomainResolutionRecord_Rr) isDomainResolutionRecord_Data() {}

func (*DomainResolutionRecord_Soa) isDomainResolutionRecord_Data() {}

func (*DomainResolutionRecord_Cert) isDomainResolutionRecord_Data() {}

func (*DomainResolutionRecord_Uri) isDomainResolutionRecord_Data() {}

func (*DomainResolutionRecord_Rp) isDomainResolutionRecord_Data() {}

func (*DomainResolutionRecord_Mx) isDomainResolutionRecord_Data() {}

type RRData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RRData) Reset() {
	*x = RRData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RRData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RRData) ProtoMessage() {}

func (x *RRData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RRData.ProtoReflect.Descriptor instead.
func (*RRData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{24}
}

func (x *RRData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	KeyTag    string `protobuf:"bytes,2,opt,name=keyTag,proto3" json:"keyTag,omitempty"`
	Algorithm string `protobuf:"bytes,3,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Data      string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CertData) Reset() {
	*x = CertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertData) ProtoMessage() {}

func (x *CertData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertData.ProtoReflect.Descriptor instead.
func (*CertData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{25}
}

func (x *CertData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CertData) GetKeyTag() string {
	if x != nil {
		return x.KeyTag
	}
	return ""
}

func (x *CertData) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *CertData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SOAData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterNameserver string `protobuf:"bytes,1,opt,name=masterNameserver,proto3" json:"masterNameserver,omitempty"`
	Email            string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	SerialNo         uint32 `protobuf:"varint,3,opt,name=serialNo,proto3" json:"serialNo,omitempty"`
	RefreshTime      uint32 `protobuf:"varint,4,opt,name=refreshTime,proto3" json:"refreshTime,omitempty"`
	RetryTime        uint32 `protobuf:"varint,5,opt,name=retryTime,proto3" json:"retryTime,omitempty"`
	ExpireTime       uint32 `protobuf:"varint,6,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
	MinTTL           uint32 `protobuf:"varint,7,opt,name=minTTL,proto3" json:"minTTL,omitempty"`
}

func (x *SOAData) Reset() {
	*x = SOAData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOAData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOAData) ProtoMessage() {}

func (x *SOAData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOAData.ProtoReflect.Descriptor instead.
func (*SOAData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{26}
}

func (x *SOAData) GetMasterNameserver() string {
	if x != nil {
		return x.MasterNameserver
	}
	return ""
}

func (x *SOAData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SOAData) GetSerialNo() uint32 {
	if x != nil {
		return x.SerialNo
	}
	return 0
}

func (x *SOAData) GetRefreshTime() uint32 {
	if x != nil {
		return x.RefreshTime
	}
	return 0
}

func (x *SOAData) GetRetryTime() uint32 {
	if x != nil {
		return x.RetryTime
	}
	return 0
}

func (x *SOAData) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *SOAData) GetMinTTL() uint32 {
	if x != nil {
		return x.MinTTL
	}
	return 0
}

type URIData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority uint32 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	Weight   uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *URIData) Reset() {
	*x = URIData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URIData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URIData) ProtoMessage() {}

func (x *URIData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URIData.ProtoReflect.Descriptor instead.
func (*URIData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{27}
}

func (x *URIData) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *URIData) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *URIData) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type RPData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mbox string `protobuf:"bytes,1,opt,name=mbox,proto3" json:"mbox,omitempty"`
	Rp   string `protobuf:"bytes,2,opt,name=rp,proto3" json:"rp,omitempty"`
}

func (x *RPData) Reset() {
	*x = RPData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPData) ProtoMessage() {}

func (x *RPData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPData.ProtoReflect.Descriptor instead.
func (*RPData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{28}
}

func (x *RPData) GetMbox() string {
	if x != nil {
		return x.Mbox
	}
	return ""
}

func (x *RPData) GetRp() string {
	if x != nil {
		return x.Rp
	}
	return ""
}

type MXData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preference uint32 `protobuf:"varint,1,opt,name=preference,proto3" json:"preference,omitempty"`
	Mx         string `protobuf:"bytes,2,opt,name=mx,proto3" json:"mx,omitempty"`
}

func (x *MXData) Reset() {
	*x = MXData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MXData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MXData) ProtoMessage() {}

func (x *MXData) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MXData.ProtoReflect.Descriptor instead.
func (*MXData) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{29}
}

func (x *MXData) GetPreference() uint32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *MXData) GetMx() string {
	if x != nil {
		return x.Mx
	}
	return ""
}

type ListDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registrant string      `protobuf:"bytes,1,opt,name=registrant,proto3" json:"registrant,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListDomainRequest) Reset() {
	*x = ListDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainRequest) ProtoMessage() {}

func (x *ListDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainRequest.ProtoReflect.Descriptor instead.
func (*ListDomainRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{30}
}

func (x *ListDomainRequest) GetRegistrant() string {
	if x != nil {
		return x.Registrant
	}
	return ""
}

func (x *ListDomainRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateDomainResolutionRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Domain string                     `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Type   DomainResolutionRecordType `protobuf:"varint,3,opt,name=type,proto3,enum=v1.DomainResolutionRecordType" json:"type,omitempty"`
	Ttl    uint32                     `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Types that are assignable to Data:
	//	*CreateDomainResolutionRecordRequest_Rr
	//	*CreateDomainResolutionRecordRequest_Soa
	//	*CreateDomainResolutionRecordRequest_Cert
	//	*CreateDomainResolutionRecordRequest_Uri
	//	*CreateDomainResolutionRecordRequest_Rp
	//	*CreateDomainResolutionRecordRequest_Mx
	Data isCreateDomainResolutionRecordRequest_Data `protobuf_oneof:"data"`
}

func (x *CreateDomainResolutionRecordRequest) Reset() {
	*x = CreateDomainResolutionRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainResolutionRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainResolutionRecordRequest) ProtoMessage() {}

func (x *CreateDomainResolutionRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainResolutionRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainResolutionRecordRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{31}
}

func (x *CreateDomainResolutionRecordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDomainResolutionRecordRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateDomainResolutionRecordRequest) GetType() DomainResolutionRecordType {
	if x != nil {
		return x.Type
	}
	return DomainResolutionRecordType_NONE
}

func (x *CreateDomainResolutionRecordRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (m *CreateDomainResolutionRecordRequest) GetData() isCreateDomainResolutionRecordRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetRr() *RRData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Rr); ok {
		return x.Rr
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetSoa() *SOAData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Soa); ok {
		return x.Soa
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetCert() *CertData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Cert); ok {
		return x.Cert
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetUri() *URIData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetRp() *RPData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Rp); ok {
		return x.Rp
	}
	return nil
}

func (x *CreateDomainResolutionRecordRequest) GetMx() *MXData {
	if x, ok := x.GetData().(*CreateDomainResolutionRecordRequest_Mx); ok {
		return x.Mx
	}
	return nil
}

type isCreateDomainResolutionRecordRequest_Data interface {
	isCreateDomainResolutionRecordRequest_Data()
}

type CreateDomainResolutionRecordRequest_Rr struct {
	Rr *RRData `protobuf:"bytes,20,opt,name=rr,proto3,oneof"`
}

type CreateDomainResolutionRecordRequest_Soa struct {
	Soa *SOAData `protobuf:"bytes,21,opt,name=soa,proto3,oneof"`
}

type CreateDomainResolutionRecordRequest_Cert struct {
	Cert *CertData `protobuf:"bytes,22,opt,name=cert,proto3,oneof"`
}

type CreateDomainResolutionRecordRequest_Uri struct {
	Uri *URIData `protobuf:"bytes,23,opt,name=uri,proto3,oneof"`
}

type CreateDomainResolutionRecordRequest_Rp struct {
	Rp *RPData `protobuf:"bytes,24,opt,name=rp,proto3,oneof"`
}

type CreateDomainResolutionRecordRequest_Mx struct {
	Mx *MXData `protobuf:"bytes,25,opt,name=mx,proto3,oneof"`
}

func (*CreateDomainResolutionRecordRequest_Rr) isCreateDomainResolutionRecordRequest_Data() {}

func (*CreateDomainResolutionRecordRequest_Soa) isCreateDomainResolutionRecordRequest_Data() {}

func (*CreateDomainResolutionRecordRequest_Cert) isCreateDomainResolutionRecordRequest_Data() {}

func (*CreateDomainResolutionRecordRequest_Uri) isCreateDomainResolutionRecordRequest_Data() {}

func (*CreateDomainResolutionRecordRequest_Rp) isCreateDomainResolutionRecordRequest_Data() {}

func (*CreateDomainResolutionRecordRequest_Mx) isCreateDomainResolutionRecordRequest_Data() {}

type UpdateDomainResolutionRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DomainResolutionRecord `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDomainResolutionRecordRequest) Reset() {
	*x = UpdateDomainResolutionRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainResolutionRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainResolutionRecordRequest) ProtoMessage() {}

func (x *UpdateDomainResolutionRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainResolutionRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateDomainResolutionRecordRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateDomainResolutionRecordRequest) GetData() *DomainResolutionRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type DomainResolutionRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DomainResolutionRecordRequest) Reset() {
	*x = DomainResolutionRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainResolutionRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainResolutionRecordRequest) ProtoMessage() {}

func (x *DomainResolutionRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainResolutionRecordRequest.ProtoReflect.Descriptor instead.
func (*DomainResolutionRecordRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{33}
}

func (x *DomainResolutionRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindDomainResolutionRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type DomainResolutionRecordType `protobuf:"varint,2,opt,name=type,proto3,enum=v1.DomainResolutionRecordType" json:"type,omitempty"`
}

func (x *FindDomainResolutionRecordRequest) Reset() {
	*x = FindDomainResolutionRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDomainResolutionRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDomainResolutionRecordRequest) ProtoMessage() {}

func (x *FindDomainResolutionRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDomainResolutionRecordRequest.ProtoReflect.Descriptor instead.
func (*FindDomainResolutionRecordRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{34}
}

func (x *FindDomainResolutionRecordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindDomainResolutionRecordRequest) GetType() DomainResolutionRecordType {
	if x != nil {
		return x.Type
	}
	return DomainResolutionRecordType_NONE
}

type DomainResolutionRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *DomainResolutionRecord `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DomainResolutionRecordResponse) Reset() {
	*x = DomainResolutionRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainResolutionRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainResolutionRecordResponse) ProtoMessage() {}

func (x *DomainResolutionRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainResolutionRecordResponse.ProtoReflect.Descriptor instead.
func (*DomainResolutionRecordResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{35}
}

func (x *DomainResolutionRecordResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DomainResolutionRecordResponse) GetData() *DomainResolutionRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type DomainResolutionRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result                   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*DomainResolutionRecord `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DomainResolutionRecordsResponse) Reset() {
	*x = DomainResolutionRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainResolutionRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainResolutionRecordsResponse) ProtoMessage() {}

func (x *DomainResolutionRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainResolutionRecordsResponse.ProtoReflect.Descriptor instead.
func (*DomainResolutionRecordsResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{36}
}

func (x *DomainResolutionRecordsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DomainResolutionRecordsResponse) GetData() []*DomainResolutionRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type IdentityIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email            string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PublicKey        []byte `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Signature        []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	CreationTime     int64  `protobuf:"varint,10,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	LastModifiedTime int64  `protobuf:"varint,11,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
}

func (x *IdentityIdentifier) Reset() {
	*x = IdentityIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityIdentifier) ProtoMessage() {}

func (x *IdentityIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityIdentifier.ProtoReflect.Descriptor instead.
func (*IdentityIdentifier) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{37}
}

func (x *IdentityIdentifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdentityIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdentityIdentifier) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *IdentityIdentifier) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *IdentityIdentifier) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *IdentityIdentifier) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *IdentityIdentifier) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

type CreateIdentityIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PublicKey []byte `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Signature []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *CreateIdentityIdentifierRequest) Reset() {
	*x = CreateIdentityIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityIdentifierRequest) ProtoMessage() {}

func (x *CreateIdentityIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityIdentifierRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{38}
}

func (x *CreateIdentityIdentifierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateIdentityIdentifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIdentityIdentifierRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateIdentityIdentifierRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *CreateIdentityIdentifierRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type IdentityIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IdentityIdentifierRequest) Reset() {
	*x = IdentityIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityIdentifierRequest) ProtoMessage() {}

func (x *IdentityIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityIdentifierRequest.ProtoReflect.Descriptor instead.
func (*IdentityIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{39}
}

func (x *IdentityIdentifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IdentityIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result             `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *IdentityIdentifier `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IdentityIdentifierResponse) Reset() {
	*x = IdentityIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityIdentifierResponse) ProtoMessage() {}

func (x *IdentityIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityIdentifierResponse.ProtoReflect.Descriptor instead.
func (*IdentityIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{40}
}

func (x *IdentityIdentifierResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *IdentityIdentifierResponse) GetData() *IdentityIdentifier {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DataAddress   string            `protobuf:"bytes,3,opt,name=dataAddress,proto3" json:"dataAddress,omitempty"`
	DataDigest    string            `protobuf:"bytes,4,opt,name=dataDigest,proto3" json:"dataDigest,omitempty"`
	DataSignature []byte            `protobuf:"bytes,5,opt,name=dataSignature,proto3" json:"dataSignature,omitempty"`
	AuthAddress   string            `protobuf:"bytes,6,opt,name=authAddress,proto3" json:"authAddress,omitempty"`
	Owner         string            `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags          []string          `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *DataIdentifier) Reset() {
	*x = DataIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdentifier) ProtoMessage() {}

func (x *DataIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdentifier.ProtoReflect.Descriptor instead.
func (*DataIdentifier) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{41}
}

func (x *DataIdentifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataIdentifier) GetDataAddress() string {
	if x != nil {
		return x.DataAddress
	}
	return ""
}

func (x *DataIdentifier) GetDataDigest() string {
	if x != nil {
		return x.DataDigest
	}
	return ""
}

func (x *DataIdentifier) GetDataSignature() []byte {
	if x != nil {
		return x.DataSignature
	}
	return nil
}

func (x *DataIdentifier) GetAuthAddress() string {
	if x != nil {
		return x.AuthAddress
	}
	return ""
}

func (x *DataIdentifier) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *DataIdentifier) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DataIdentifier) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreateDataIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DataAddress   string            `protobuf:"bytes,3,opt,name=dataAddress,proto3" json:"dataAddress,omitempty"`
	DataDigest    string            `protobuf:"bytes,4,opt,name=dataDigest,proto3" json:"dataDigest,omitempty"`
	DataSignature []byte            `protobuf:"bytes,5,opt,name=dataSignature,proto3" json:"dataSignature,omitempty"`
	AuthAddress   string            `protobuf:"bytes,6,opt,name=authAddress,proto3" json:"authAddress,omitempty"`
	Owner         string            `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags          []string          `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CreateDataIdentifierRequest) Reset() {
	*x = CreateDataIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataIdentifierRequest) ProtoMessage() {}

func (x *CreateDataIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataIdentifierRequest.ProtoReflect.Descriptor instead.
func (*CreateDataIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{42}
}

func (x *CreateDataIdentifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDataIdentifierRequest) GetDataAddress() string {
	if x != nil {
		return x.DataAddress
	}
	return ""
}

func (x *CreateDataIdentifierRequest) GetDataDigest() string {
	if x != nil {
		return x.DataDigest
	}
	return ""
}

func (x *CreateDataIdentifierRequest) GetDataSignature() []byte {
	if x != nil {
		return x.DataSignature
	}
	return nil
}

func (x *CreateDataIdentifierRequest) GetAuthAddress() string {
	if x != nil {
		return x.AuthAddress
	}
	return ""
}

func (x *CreateDataIdentifierRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateDataIdentifierRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateDataIdentifierRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DataIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DataIdentifierRequest) Reset() {
	*x = DataIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdentifierRequest) ProtoMessage() {}

func (x *DataIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdentifierRequest.ProtoReflect.Descriptor instead.
func (*DataIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{43}
}

func (x *DataIdentifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Criterion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=v1.Operator" json:"operator,omitempty"`
	Value    string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Criterion) Reset() {
	*x = Criterion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Criterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criterion) ProtoMessage() {}

func (x *Criterion) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criterion.ProtoReflect.Descriptor instead.
func (*Criterion) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{44}
}

func (x *Criterion) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Criterion) GetOperator() Operator {
	if x != nil {
		return x.Operator
	}
	return Operator_GT
}

func (x *Criterion) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Criteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicalType LogicalOperator `protobuf:"varint,1,opt,name=logicalType,proto3,enum=v1.LogicalOperator" json:"logicalType,omitempty"`
	Criterions  []*Criterion    `protobuf:"bytes,2,rep,name=criterions,proto3" json:"criterions,omitempty"`
}

func (x *Criteria) Reset() {
	*x = Criteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Criteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criteria) ProtoMessage() {}

func (x *Criteria) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criteria.ProtoReflect.Descriptor instead.
func (*Criteria) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{45}
}

func (x *Criteria) GetLogicalType() LogicalOperator {
	if x != nil {
		return x.LogicalType
	}
	return LogicalOperator_AND
}

func (x *Criteria) GetCriterions() []*Criterion {
	if x != nil {
		return x.Criterions
	}
	return nil
}

type FindDataIdentifierByMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria   *Criteria   `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *FindDataIdentifierByMetadataRequest) Reset() {
	*x = FindDataIdentifierByMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDataIdentifierByMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDataIdentifierByMetadataRequest) ProtoMessage() {}

func (x *FindDataIdentifierByMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDataIdentifierByMetadataRequest.ProtoReflect.Descriptor instead.
func (*FindDataIdentifierByMetadataRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{46}
}

func (x *FindDataIdentifierByMetadataRequest) GetCriteria() *Criteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *FindDataIdentifierByMetadataRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FindDataIdentifierByTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag        string      `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *FindDataIdentifierByTagRequest) Reset() {
	*x = FindDataIdentifierByTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDataIdentifierByTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDataIdentifierByTagRequest) ProtoMessage() {}

func (x *FindDataIdentifierByTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDataIdentifierByTagRequest.ProtoReflect.Descriptor instead.
func (*FindDataIdentifierByTagRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{47}
}

func (x *FindDataIdentifierByTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *FindDataIdentifierByTagRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DataIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *DataIdentifier `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataIdentifierResponse) Reset() {
	*x = DataIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdentifierResponse) ProtoMessage() {}

func (x *DataIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdentifierResponse.ProtoReflect.Descriptor instead.
func (*DataIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{48}
}

func (x *DataIdentifierResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DataIdentifierResponse) GetData() *DataIdentifier {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataIdentifiersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*DataIdentifier `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DataIdentifiersResponse) Reset() {
	*x = DataIdentifiersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdentifiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdentifiersResponse) ProtoMessage() {}

func (x *DataIdentifiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdentifiersResponse.ProtoReflect.Descriptor instead.
func (*DataIdentifiersResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{49}
}

func (x *DataIdentifiersResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DataIdentifiersResponse) GetData() []*DataIdentifier {
	if x != nil {
		return x.Data
	}
	return nil
}

// For blockchain service
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Content      string            `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Operator     string            `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	Metadata     map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreationTime int64             `protobuf:"varint,7,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{50}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Event) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

type BlockchainTransactionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	DataHash      string `protobuf:"bytes,2,opt,name=dataHash,proto3" json:"dataHash,omitempty"`
	PreviousHash  string `protobuf:"bytes,3,opt,name=previousHash,proto3" json:"previousHash,omitempty"`
	Timestamp     int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height        uint64 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Event         *Event `protobuf:"bytes,6,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *BlockchainTransactionRecord) Reset() {
	*x = BlockchainTransactionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainTransactionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainTransactionRecord) ProtoMessage() {}

func (x *BlockchainTransactionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainTransactionRecord.ProtoReflect.Descriptor instead.
func (*BlockchainTransactionRecord) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{51}
}

func (x *BlockchainTransactionRecord) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *BlockchainTransactionRecord) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *BlockchainTransactionRecord) GetPreviousHash() string {
	if x != nil {
		return x.PreviousHash
	}
	return ""
}

func (x *BlockchainTransactionRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockchainTransactionRecord) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockchainTransactionRecord) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type TracingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *TracingRequest) Reset() {
	*x = TracingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingRequest) ProtoMessage() {}

func (x *TracingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingRequest.ProtoReflect.Descriptor instead.
func (*TracingRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{52}
}

func (x *TracingRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type TracingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result                        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   []*BlockchainTransactionRecord `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TracingResponse) Reset() {
	*x = TracingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingResponse) ProtoMessage() {}

func (x *TracingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingResponse.ProtoReflect.Descriptor instead.
func (*TracingResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{53}
}

func (x *TracingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TracingResponse) GetData() []*BlockchainTransactionRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

// For common usage
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{54}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GeneralPaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GeneralPaginationRequest) Reset() {
	*x = GeneralPaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralPaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralPaginationRequest) ProtoMessage() {}

func (x *GeneralPaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralPaginationRequest.ProtoReflect.Descriptor instead.
func (*GeneralPaginationRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{55}
}

func (x *GeneralPaginationRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{56}
}

func (x *Result) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GeneralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
}

func (x *GeneralRequest) Reset() {
	*x = GeneralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralRequest) ProtoMessage() {}

func (x *GeneralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralRequest.ProtoReflect.Descriptor instead.
func (*GeneralRequest) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{57}
}

func (x *GeneralRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type GeneralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GeneralResponse) Reset() {
	*x = GeneralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_magnolia_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralResponse) ProtoMessage() {}

func (x *GeneralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_magnolia_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralResponse.ProtoReflect.Descriptor instead.
func (*GeneralResponse) Descriptor() ([]byte, []int) {
	return file_magnolia_proto_rawDescGZIP(), []int{58}
}

func (x *GeneralResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_magnolia_proto protoreflect.FileDescriptor

var file_magnolia_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x61, 0x67, 0x6e, 0x6f, 0x6c, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x76, 0x31, 0x22, 0xc6, 0x01, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01,
	0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x22, 0x8b, 0x01, 0x0a, 0x1d,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x17, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x5c, 0x0a,
	0x18, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x02, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x62, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x18, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x70, 0x69, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x0f, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a,
	0x10, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xff, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x5a, 0x0a, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x12,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc3, 0x02, 0x0a, 0x06, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x72, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x72, 0x72, 0x73, 0x1a, 0x52, 0x0a, 0x08, 0x52,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x49, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x54, 0x0a, 0x0e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf3, 0x03, 0x0a,
	0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x02, 0x72, 0x72,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x52, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x72, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x6f, 0x61, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4f, 0x41, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x52, 0x49, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1c,
	0x0a, 0x02, 0x72, 0x70, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x50, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x72, 0x70, 0x12, 0x1c, 0x0a, 0x02,
	0x6d, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x58,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x6d, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x1e, 0x0a, 0x06, 0x52, 0x52, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x68, 0x0a, 0x08, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x01, 0x0a,
	0x07, 0x53, 0x4f, 0x41, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x54, 0x54, 0x4c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x54, 0x54, 0x4c, 0x22, 0x55,
	0x0a, 0x07, 0x55, 0x52, 0x49, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2c, 0x0a, 0x06, 0x52, 0x50, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x62, 0x6f, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x72, 0x70, 0x22, 0x38, 0x0a, 0x06, 0x4d, 0x58, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6d, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x78, 0x22, 0x63, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xdf, 0x02, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1c, 0x0a, 0x02,
	0x72, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x52,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x72, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x6f,
	0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4f, 0x41,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x63,
	0x65, 0x72, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x52, 0x49, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x1c, 0x0a, 0x02, 0x72, 0x70, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x50, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x72, 0x70, 0x12, 0x1c,
	0x0a, 0x02, 0x6d, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x58, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x6d, 0x78, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x1d, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x21,
	0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x1e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x75, 0x0a, 0x1f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2f, 0x0a,
	0x19, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c,
	0x0a, 0x1a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x02, 0x0a,
	0x0e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xed, 0x02, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x5d, 0x0a, 0x09, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x70,
	0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x35, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x7f, 0x0a, 0x23, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x17, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xda, 0x01, 0x0a, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a,
	0x0e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0f, 0x54, 0x72, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0x4a, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x35, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x9b, 0x01, 0x0a, 0x1a, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x05, 0x0a, 0x01, 0x41, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x41,
	0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x54, 0x52, 0x10, 0x0c, 0x12, 0x06, 0x0a, 0x02, 0x4d,
	0x58, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x58, 0x54, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02,
	0x52, 0x50, 0x10, 0x11, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x41, 0x41, 0x41, 0x10, 0x1c, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x4f, 0x43, 0x10, 0x1d, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x52, 0x56, 0x10, 0x21,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x52, 0x54, 0x10, 0x25, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x52,
	0x49, 0x10, 0x80, 0x02, 0x2a, 0x32, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x45, 0x51, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x45, 0x10, 0x03,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x45, 0x10, 0x04, 0x2a, 0x22, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x01, 0x32, 0xe2, 0x04, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x12,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x15, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x89, 0x0d, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x1a, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x67, 0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x75, 0x0a,
	0x14, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x09,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x1c, 0x0a, 0x13, 0x69, 0x73, 0x2e, 0x66, 0x75, 0x78, 0x69, 0x2e,
	0x6d, 0x61, 0x67, 0x6e, 0x6f, 0x6c, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x03, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_magnolia_proto_rawDescOnce sync.Once
	file_magnolia_proto_rawDescData = file_magnolia_proto_rawDesc
)

func file_magnolia_proto_rawDescGZIP() []byte {
	file_magnolia_proto_rawDescOnce.Do(func() {
		file_magnolia_proto_rawDescData = protoimpl.X.CompressGZIP(file_magnolia_proto_rawDescData)
	})
	return file_magnolia_proto_rawDescData
}

var file_magnolia_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_magnolia_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_magnolia_proto_goTypes = []interface{}{
	(DomainResolutionRecordType)(0),                 // 0: v1.DomainResolutionRecordType
	(Operator)(0),                                   // 1: v1.Operator
	(LogicalOperator)(0),                            // 2: v1.LogicalOperator
	(CommunicationDestination_CommunicationType)(0), // 3: v1.CommunicationDestination.CommunicationType
	(*ApplyRegistrationCodeRequest)(nil),            // 4: v1.ApplyRegistrationCodeRequest
	(*CommunicationDestination)(nil),                // 5: v1.CommunicationDestination
	(*ApplyRegistrationCodeResponse)(nil),           // 6: v1.ApplyRegistrationCodeResponse
	(*UserRegistrationRequest)(nil),                 // 7: v1.UserRegistrationRequest
	(*UserRegistrationResponse)(nil),                // 8: v1.UserRegistrationResponse
	(*User)(nil),                                    // 9: v1.User
	(*UserAuthenticationRequest)(nil),               // 10: v1.UserAuthenticationRequest
	(*UserAuthenticationResponse)(nil),              // 11: v1.UserAuthenticationResponse
	(*UserUnregisterRequest)(nil),                   // 12: v1.UserUnregisterRequest
	(*LicenseManagementRequest)(nil),                // 13: v1.LicenseManagementRequest
	(*RevokeLicenseRequest)(nil),                    // 14: v1.RevokeLicenseRequest
	(*License)(nil),                                 // 15: v1.License
	(*LicenseResponse)(nil),                         // 16: v1.LicenseResponse
	(*LicensesResponse)(nil),                        // 17: v1.LicensesResponse
	(*Namespace)(nil),                               // 18: v1.Namespace
	(*NamespaceRequest)(nil),                        // 19: v1.NamespaceRequest
	(*NamespaceResponse)(nil),                       // 20: v1.NamespaceResponse
	(*NamespacesResponse)(nil),                      // 21: v1.NamespacesResponse
	(*Domain)(nil),                                  // 22: v1.Domain
	(*CreateDomainRequest)(nil),                     // 23: v1.CreateDomainRequest
	(*DomainRequest)(nil),                           // 24: v1.DomainRequest
	(*DomainResponse)(nil),                          // 25: v1.DomainResponse
	(*DomainsResponse)(nil),                         // 26: v1.DomainsResponse
	(*DomainResolutionRecord)(nil),                  // 27: v1.DomainResolutionRecord
	(*RRData)(nil),                                  // 28: v1.RRData
	(*CertData)(nil),                                // 29: v1.CertData
	(*SOAData)(nil),                                 // 30: v1.SOAData
	(*URIData)(nil),                                 // 31: v1.URIData
	(*RPData)(nil),                                  // 32: v1.RPData
	(*MXData)(nil),                                  // 33: v1.MXData
	(*ListDomainRequest)(nil),                       // 34: v1.ListDomainRequest
	(*CreateDomainResolutionRecordRequest)(nil),     // 35: v1.CreateDomainResolutionRecordRequest
	(*UpdateDomainResolutionRecordRequest)(nil),     // 36: v1.UpdateDomainResolutionRecordRequest
	(*DomainResolutionRecordRequest)(nil),           // 37: v1.DomainResolutionRecordRequest
	(*FindDomainResolutionRecordRequest)(nil),       // 38: v1.FindDomainResolutionRecordRequest
	(*DomainResolutionRecordResponse)(nil),          // 39: v1.DomainResolutionRecordResponse
	(*DomainResolutionRecordsResponse)(nil),         // 40: v1.DomainResolutionRecordsResponse
	(*IdentityIdentifier)(nil),                      // 41: v1.IdentityIdentifier
	(*CreateIdentityIdentifierRequest)(nil),         // 42: v1.CreateIdentityIdentifierRequest
	(*IdentityIdentifierRequest)(nil),               // 43: v1.IdentityIdentifierRequest
	(*IdentityIdentifierResponse)(nil),              // 44: v1.IdentityIdentifierResponse
	(*DataIdentifier)(nil),                          // 45: v1.DataIdentifier
	(*CreateDataIdentifierRequest)(nil),             // 46: v1.CreateDataIdentifierRequest
	(*DataIdentifierRequest)(nil),                   // 47: v1.DataIdentifierRequest
	(*Criterion)(nil),                               // 48: v1.Criterion
	(*Criteria)(nil),                                // 49: v1.Criteria
	(*FindDataIdentifierByMetadataRequest)(nil),     // 50: v1.FindDataIdentifierByMetadataRequest
	(*FindDataIdentifierByTagRequest)(nil),          // 51: v1.FindDataIdentifierByTagRequest
	(*DataIdentifierResponse)(nil),                  // 52: v1.DataIdentifierResponse
	(*DataIdentifiersResponse)(nil),                 // 53: v1.DataIdentifiersResponse
	(*Event)(nil),                                   // 54: v1.Event
	(*BlockchainTransactionRecord)(nil),             // 55: v1.BlockchainTransactionRecord
	(*TracingRequest)(nil),                          // 56: v1.TracingRequest
	(*TracingResponse)(nil),                         // 57: v1.TracingResponse
	(*Pagination)(nil),                              // 58: v1.Pagination
	(*GeneralPaginationRequest)(nil),                // 59: v1.GeneralPaginationRequest
	(*Result)(nil),                                  // 60: v1.Result
	(*GeneralRequest)(nil),                          // 61: v1.GeneralRequest
	(*GeneralResponse)(nil),                         // 62: v1.GeneralResponse
	nil,                                             // 63: v1.Domain.RrsEntry
	nil,                                             // 64: v1.DataIdentifier.MetadataEntry
	nil,                                             // 65: v1.CreateDataIdentifierRequest.MetadataEntry
	nil,                                             // 66: v1.Event.MetadataEntry
}
var file_magnolia_proto_depIdxs = []int32{
	5,  // 0: v1.ApplyRegistrationCodeRequest.communicationDestination:type_name -> v1.CommunicationDestination
	3,  // 1: v1.CommunicationDestination.type:type_name -> v1.CommunicationDestination.CommunicationType
	60, // 2: v1.ApplyRegistrationCodeResponse.result:type_name -> v1.Result
	60, // 3: v1.UserRegistrationResponse.result:type_name -> v1.Result
	9,  // 4: v1.UserRegistrationResponse.data:type_name -> v1.User
	60, // 5: v1.UserAuthenticationResponse.result:type_name -> v1.Result
	60, // 6: v1.LicenseResponse.result:type_name -> v1.Result
	15, // 7: v1.LicenseResponse.data:type_name -> v1.License
	60, // 8: v1.LicensesResponse.result:type_name -> v1.Result
	15, // 9: v1.LicensesResponse.data:type_name -> v1.License
	60, // 10: v1.NamespaceResponse.result:type_name -> v1.Result
	18, // 11: v1.NamespaceResponse.data:type_name -> v1.Namespace
	60, // 12: v1.NamespacesResponse.result:type_name -> v1.Result
	18, // 13: v1.NamespacesResponse.data:type_name -> v1.Namespace
	63, // 14: v1.Domain.rrs:type_name -> v1.Domain.RrsEntry
	60, // 15: v1.DomainResponse.result:type_name -> v1.Result
	22, // 16: v1.DomainResponse.data:type_name -> v1.Domain
	60, // 17: v1.DomainsResponse.result:type_name -> v1.Result
	22, // 18: v1.DomainsResponse.data:type_name -> v1.Domain
	0,  // 19: v1.DomainResolutionRecord.type:type_name -> v1.DomainResolutionRecordType
	28, // 20: v1.DomainResolutionRecord.rr:type_name -> v1.RRData
	30, // 21: v1.DomainResolutionRecord.soa:type_name -> v1.SOAData
	29, // 22: v1.DomainResolutionRecord.cert:type_name -> v1.CertData
	31, // 23: v1.DomainResolutionRecord.uri:type_name -> v1.URIData
	32, // 24: v1.DomainResolutionRecord.rp:type_name -> v1.RPData
	33, // 25: v1.DomainResolutionRecord.mx:type_name -> v1.MXData
	58, // 26: v1.ListDomainRequest.pagination:type_name -> v1.Pagination
	0,  // 27: v1.CreateDomainResolutionRecordRequest.type:type_name -> v1.DomainResolutionRecordType
	28, // 28: v1.CreateDomainResolutionRecordRequest.rr:type_name -> v1.RRData
	30, // 29: v1.CreateDomainResolutionRecordRequest.soa:type_name -> v1.SOAData
	29, // 30: v1.CreateDomainResolutionRecordRequest.cert:type_name -> v1.CertData
	31, // 31: v1.CreateDomainResolutionRecordRequest.uri:type_name -> v1.URIData
	32, // 32: v1.CreateDomainResolutionRecordRequest.rp:type_name -> v1.RPData
	33, // 33: v1.CreateDomainResolutionRecordRequest.mx:type_name -> v1.MXData
	27, // 34: v1.UpdateDomainResolutionRecordRequest.data:type_name -> v1.DomainResolutionRecord
	0,  // 35: v1.FindDomainResolutionRecordRequest.type:type_name -> v1.DomainResolutionRecordType
	60, // 36: v1.DomainResolutionRecordResponse.result:type_name -> v1.Result
	27, // 37: v1.DomainResolutionRecordResponse.data:type_name -> v1.DomainResolutionRecord
	60, // 38: v1.DomainResolutionRecordsResponse.result:type_name -> v1.Result
	27, // 39: v1.DomainResolutionRecordsResponse.data:type_name -> v1.DomainResolutionRecord
	60, // 40: v1.IdentityIdentifierResponse.result:type_name -> v1.Result
	41, // 41: v1.IdentityIdentifierResponse.data:type_name -> v1.IdentityIdentifier
	64, // 42: v1.DataIdentifier.metadata:type_name -> v1.DataIdentifier.MetadataEntry
	65, // 43: v1.CreateDataIdentifierRequest.metadata:type_name -> v1.CreateDataIdentifierRequest.MetadataEntry
	1,  // 44: v1.Criterion.operator:type_name -> v1.Operator
	2,  // 45: v1.Criteria.logicalType:type_name -> v1.LogicalOperator
	48, // 46: v1.Criteria.criterions:type_name -> v1.Criterion
	49, // 47: v1.FindDataIdentifierByMetadataRequest.criteria:type_name -> v1.Criteria
	58, // 48: v1.FindDataIdentifierByMetadataRequest.pagination:type_name -> v1.Pagination
	58, // 49: v1.FindDataIdentifierByTagRequest.pagination:type_name -> v1.Pagination
	60, // 50: v1.DataIdentifierResponse.result:type_name -> v1.Result
	45, // 51: v1.DataIdentifierResponse.data:type_name -> v1.DataIdentifier
	60, // 52: v1.DataIdentifiersResponse.result:type_name -> v1.Result
	45, // 53: v1.DataIdentifiersResponse.data:type_name -> v1.DataIdentifier
	66, // 54: v1.Event.metadata:type_name -> v1.Event.MetadataEntry
	54, // 55: v1.BlockchainTransactionRecord.event:type_name -> v1.Event
	60, // 56: v1.TracingResponse.result:type_name -> v1.Result
	55, // 57: v1.TracingResponse.data:type_name -> v1.BlockchainTransactionRecord
	58, // 58: v1.GeneralPaginationRequest.pagination:type_name -> v1.Pagination
	60, // 59: v1.GeneralResponse.result:type_name -> v1.Result
	27, // 60: v1.Domain.RrsEntry.value:type_name -> v1.DomainResolutionRecord
	59, // 61: v1.UserService.AvailableNamespace:input_type -> v1.GeneralPaginationRequest
	4,  // 62: v1.UserService.ApplyRegistrationCode:input_type -> v1.ApplyRegistrationCodeRequest
	7,  // 63: v1.UserService.Register:input_type -> v1.UserRegistrationRequest
	10, // 64: v1.UserService.Authenticate:input_type -> v1.UserAuthenticationRequest
	12, // 65: v1.UserService.Unregister:input_type -> v1.UserUnregisterRequest
	13, // 66: v1.UserService.ListLicense:input_type -> v1.LicenseManagementRequest
	13, // 67: v1.UserService.CreateLicense:input_type -> v1.LicenseManagementRequest
	14, // 68: v1.UserService.RevokeLicense:input_type -> v1.RevokeLicenseRequest
	59, // 69: v1.EntropyService.AvailableNamespace:input_type -> v1.GeneralPaginationRequest
	61, // 70: v1.EntropyService.CurrentNamespace:input_type -> v1.GeneralRequest
	19, // 71: v1.EntropyService.ActivateNamespace:input_type -> v1.NamespaceRequest
	23, // 72: v1.EntropyService.CreateDomain:input_type -> v1.CreateDomainRequest
	24, // 73: v1.EntropyService.DeleteDomain:input_type -> v1.DomainRequest
	24, // 74: v1.EntropyService.GetDomain:input_type -> v1.DomainRequest
	34, // 75: v1.EntropyService.ListDomain:input_type -> v1.ListDomainRequest
	35, // 76: v1.EntropyService.AddDomainResolutionRecord:input_type -> v1.CreateDomainResolutionRecordRequest
	36, // 77: v1.EntropyService.UpdateDomainResolutionRecord:input_type -> v1.UpdateDomainResolutionRecordRequest
	37, // 78: v1.EntropyService.DeleteDomainResolutionRecord:input_type -> v1.DomainResolutionRecordRequest
	37, // 79: v1.EntropyService.GetDomainResolutionRecord:input_type -> v1.DomainResolutionRecordRequest
	38, // 80: v1.EntropyService.FindDomainResolutionRecord:input_type -> v1.FindDomainResolutionRecordRequest
	42, // 81: v1.EntropyService.CreateIdentityIdentifier:input_type -> v1.CreateIdentityIdentifierRequest
	43, // 82: v1.EntropyService.DeleteIdentityIdentifier:input_type -> v1.IdentityIdentifierRequest
	43, // 83: v1.EntropyService.GetIdentityIdentifier:input_type -> v1.IdentityIdentifierRequest
	46, // 84: v1.EntropyService.CreateDataIdentifier:input_type -> v1.CreateDataIdentifierRequest
	47, // 85: v1.EntropyService.DeleteDataIdentifier:input_type -> v1.DataIdentifierRequest
	47, // 86: v1.EntropyService.GetDataIdentifier:input_type -> v1.DataIdentifierRequest
	50, // 87: v1.EntropyService.FindDataIdentifierByMetadata:input_type -> v1.FindDataIdentifierByMetadataRequest
	51, // 88: v1.EntropyService.FindDataIdentifierByTag:input_type -> v1.FindDataIdentifierByTagRequest
	54, // 89: v1.TrustedLedgerService.Track:input_type -> v1.Event
	56, // 90: v1.TrustedLedgerService.Trace:input_type -> v1.TracingRequest
	21, // 91: v1.UserService.AvailableNamespace:output_type -> v1.NamespacesResponse
	6,  // 92: v1.UserService.ApplyRegistrationCode:output_type -> v1.ApplyRegistrationCodeResponse
	8,  // 93: v1.UserService.Register:output_type -> v1.UserRegistrationResponse
	11, // 94: v1.UserService.Authenticate:output_type -> v1.UserAuthenticationResponse
	62, // 95: v1.UserService.Unregister:output_type -> v1.GeneralResponse
	17, // 96: v1.UserService.ListLicense:output_type -> v1.LicensesResponse
	16, // 97: v1.UserService.CreateLicense:output_type -> v1.LicenseResponse
	62, // 98: v1.UserService.RevokeLicense:output_type -> v1.GeneralResponse
	21, // 99: v1.EntropyService.AvailableNamespace:output_type -> v1.NamespacesResponse
	20, // 100: v1.EntropyService.CurrentNamespace:output_type -> v1.NamespaceResponse
	62, // 101: v1.EntropyService.ActivateNamespace:output_type -> v1.GeneralResponse
	62, // 102: v1.EntropyService.CreateDomain:output_type -> v1.GeneralResponse
	62, // 103: v1.EntropyService.DeleteDomain:output_type -> v1.GeneralResponse
	25, // 104: v1.EntropyService.GetDomain:output_type -> v1.DomainResponse
	26, // 105: v1.EntropyService.ListDomain:output_type -> v1.DomainsResponse
	39, // 106: v1.EntropyService.AddDomainResolutionRecord:output_type -> v1.DomainResolutionRecordResponse
	62, // 107: v1.EntropyService.UpdateDomainResolutionRecord:output_type -> v1.GeneralResponse
	62, // 108: v1.EntropyService.DeleteDomainResolutionRecord:output_type -> v1.GeneralResponse
	39, // 109: v1.EntropyService.GetDomainResolutionRecord:output_type -> v1.DomainResolutionRecordResponse
	40, // 110: v1.EntropyService.FindDomainResolutionRecord:output_type -> v1.DomainResolutionRecordsResponse
	44, // 111: v1.EntropyService.CreateIdentityIdentifier:output_type -> v1.IdentityIdentifierResponse
	62, // 112: v1.EntropyService.DeleteIdentityIdentifier:output_type -> v1.GeneralResponse
	44, // 113: v1.EntropyService.GetIdentityIdentifier:output_type -> v1.IdentityIdentifierResponse
	52, // 114: v1.EntropyService.CreateDataIdentifier:output_type -> v1.DataIdentifierResponse
	62, // 115: v1.EntropyService.DeleteDataIdentifier:output_type -> v1.GeneralResponse
	52, // 116: v1.EntropyService.GetDataIdentifier:output_type -> v1.DataIdentifierResponse
	53, // 117: v1.EntropyService.FindDataIdentifierByMetadata:output_type -> v1.DataIdentifiersResponse
	53, // 118: v1.EntropyService.FindDataIdentifierByTag:output_type -> v1.DataIdentifiersResponse
	62, // 119: v1.TrustedLedgerService.Track:output_type -> v1.GeneralResponse
	57, // 120: v1.TrustedLedgerService.Trace:output_type -> v1.TracingResponse
	91, // [91:121] is the sub-list for method output_type
	61, // [61:91] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_magnolia_proto_init() }
func file_magnolia_proto_init() {
	if File_magnolia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_magnolia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRegistrationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommunicationDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRegistrationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthenticationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthenticationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUnregisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseManagementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicensesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainResolutionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RRData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SOAData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URIData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MXData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainResolutionRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainResolutionRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainResolutionRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDomainResolutionRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainResolutionRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainResolutionRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Criterion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Criteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDataIdentifierByMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDataIdentifierByTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdentifiersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainTransactionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralPaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_magnolia_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_magnolia_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*DomainResolutionRecord_Rr)(nil),
		(*DomainResolutionRecord_Soa)(nil),
		(*DomainResolutionRecord_Cert)(nil),
		(*DomainResolutionRecord_Uri)(nil),
		(*DomainResolutionRecord_Rp)(nil),
		(*DomainResolutionRecord_Mx)(nil),
	}
	file_magnolia_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*CreateDomainResolutionRecordRequest_Rr)(nil),
		(*CreateDomainResolutionRecordRequest_Soa)(nil),
		(*CreateDomainResolutionRecordRequest_Cert)(nil),
		(*CreateDomainResolutionRecordRequest_Uri)(nil),
		(*CreateDomainResolutionRecordRequest_Rp)(nil),
		(*CreateDomainResolutionRecordRequest_Mx)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_magnolia_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_magnolia_proto_goTypes,
		DependencyIndexes: file_magnolia_proto_depIdxs,
		EnumInfos:         file_magnolia_proto_enumTypes,
		MessageInfos:      file_magnolia_proto_msgTypes,
	}.Build()
	File_magnolia_proto = out.File
	file_magnolia_proto_rawDesc = nil
	file_magnolia_proto_goTypes = nil
	file_magnolia_proto_depIdxs = nil
}
